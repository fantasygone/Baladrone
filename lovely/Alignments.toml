[manifest]
version = "1.0.0"
dump_lua = true
priority = 1




# Add Alignment Cardarea
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''G.SPLASH_BACK = Sprite(-30, -6, G.ROOM.T.w+60, G.ROOM.T.h+12, G.ASSET_ATLAS["ui_1"], {x = 2, y = 0})'''
position = "before"
payload = '''

self.cs_alignment_W = G.CARD_W*1.1
self.cs_alignment_H = 0.95*G.CARD_H

self.cs_alignments = CardArea(
    G.consumeables.T.x + 2.25,
    G.consumeables.T.y + G.consumeables.T.h + 1, 
    self.cs_alignment_W, 
    self.cs_alignment_H, 
    {card_limit = 1, type = 'cs_alignment', highlight_limit = 0}
)
'''
match_indent = true





# Set Alignment undiscovered sprite while patching SMODS? wish me luck... (it worked??!?!?!?)
[[patches]]
[patches.pattern]
target = '''=[SMODS _ "src/overrides.lua"]'''
pattern = '''
elseif _center.set == 'Joker' or _center.consumeable or _center.set == 'Voucher' then
'''
position="before"
payload='''
elseif not self.params.bypass_discovery_center and _center.set == 'Alignment' and not _center.discovered then 
    self.children.center = Sprite(self.T.x, self.T.y, self.T.w, self.T.h, G.ASSET_ATLAS[_center.atlas or _center.set], 
    (_center.set == 'Alignment' and _center.undisc_pos))
'''
match_indent = true





# Set Alignment undiscovered desc
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
    if not self.bypass_lock and self.config.center.unlocked ~= false and
    (self.ability.set == 'Joker' or self.ability.set == 'Edition' or self.ability.consumeable or self.ability.set == 'Voucher' or self.ability.set == 'Booster') and
    not self.config.center.discovered and 
    ((self.area ~= G.jokers and self.area ~= G.consumeables and self.area) or not self.area) then
        card_type = 'Undiscovered'
    end    
'''
position = "after"
payload = '''
if not self.bypass_lock and self.config.center.unlocked ~= false and
self.ability.set == 'Alignment' and
not self.config.center.discovered and 
((self.area ~= G.cs_alignments and self.area) or not self.area) then
    card_type = 'Undiscovered'
end    
'''
match_indent = true




# Gain Joker aligned to current Alignment when acquired
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if v.yes_pool_flag and not G.GAME.pool_flags[v.yes_pool_flag] then add = nil end"
position = "after"
payload = '''
if G.GAME.current_alignment ~= "chameleon" then
    if v.set == 'Joker' 
    and v.config.alignment ~= G.GAME.current_alignment 
    and G.GAME.current_alignment_only then 
        add = nil 
    end
else
    if v.set == 'Joker' 
    and G.GAME.current_alignment_only 
    and v.config.alignment == nil then 
        add = nil 
    end
end
'''
match_indent = true




# Set Alignment usage
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "set_joker_usage()"
position = "after"
payload = '''
set_alignment_usage()
'''
match_indent = true




# Set Alignment win
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "set_joker_win()"
position = "after"
payload = '''
set_alignment_win()
'''
match_indent = true




# Set Alignment loss
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "set_joker_loss()"
position = "after"
payload = '''
set_alignment_loss()
'''
match_indent = true




# alignment_usage
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "joker_usage = {},"
position = "after"
payload = '''
alignment_usage = {},
'''
match_indent = true