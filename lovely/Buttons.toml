[manifest]
version = "1.0.0"
dump_lua = true
priority = 1




# Flip button for Flip Right
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
if (card.area == G.jokers and G.jokers or card.area == G.consumeables and G.consumeables) and G.STATE ~= G.STATES.TUTORIAL then --Add a sell button
'''
position = "before"
payload = '''
print(card.config.center.key)
if (card.area == G.jokers and G.jokers and card.config.center.key == 'j_cs_flip_right') and G.STATE ~= G.STATES.TUTORIAL then 
base_attach.children.flip = G.UIDEF.card_focus_button{
    card = card, parent = base_attach, type = 'flip',
    func = 'can_flip_card', button = 'flip_card', card_width = card_width
}
end
'''
match_indent = true




# Flip button for Flip Right
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
button_contents = {n=G.UIT.T, config={text = localize('b_use'),colour = G.C.WHITE, scale = 0.5}}
'''
position = "after"
payload = '''
elseif args.type == 'flip' then
  button_contents = {n=G.UIT.T, config={text = localize('b_flip'), colour = G.C.WHITE, scale = 0.5}}
'''
match_indent = true




# Flip button for Flip Right
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
local use = nil
'''
position = "after"
payload = '''
local flip = nil

-- Flip button
if card.area and card.area.config.type == 'joker' and card.config.center.key == 'j_cs_flip_right' then
  flip = { n = G.UIT.C, config = { align = "cr" }, nodes = {
    { n = G.UIT.C, config = {
        ref_table = card, align = "cr", padding = 0.1, r = 0.08, minw = 1.25,
        hover = true, shadow = true, colour = G.C.ALIGNMENT['cs_joker'],
        one_press = true, button = 'flip_card', func = 'can_flip_card'
      }, nodes = {
        { n = G.UIT.B, config = { w = 0.1, h = 0.6 } },
        -- THIS COLUMN forces vertical stacking of the two rows below
        { n = G.UIT.C, config = { align = "tm" }, nodes = {
            -- first row: FLIP label
            { n = G.UIT.R, config = { align = "cm", maxw = 1.25 }, nodes = {
                { n = G.UIT.T, config = { text = localize('b_flip'), colour = G.C.UI.TEXT_DARK, scale = 0.40, shadow = true } }
            }},
            -- second row: cost under the label
            { n = G.UIT.R, config = { align = "cm" }, nodes = {
                { n = G.UIT.T, config = { text = "-2 MANA", colour = G.C.RED, scale = 0.35, shadow = true } }
            }}
        }},
    }},
  }}
end
'''
match_indent = true




# Flip button for Flip Right
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
  return t
end

function G.UIDEF.card_focus_ui(card)
'''
position = "before"
payload = '''
t = {
  n=G.UIT.ROOT, config = {padding = 0, colour = G.C.CLEAR}, nodes={
    {n=G.UIT.C, config={padding = 0.15, align = 'cl'}, nodes={
      {n=G.UIT.R, config={align = 'cl'}, nodes={sell}},
      {n=G.UIT.R, config={align = 'cl'}, nodes={use or flip}},  -- stack underneath
    }},
  }
}
'''
match_indent = true