[manifest]
version = "1.0.0"
dump_lua = true
priority = 1




# Context for when you Cash out
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''
      end
      reset_blinds()
      delay(0.6)
'''
position = "after"
payload = '''
    for i = 1, #G.jokers.cards do
        if cs_utils.contains(startingshop_context, G.jokers.cards[i].ability.name) then
            G.jokers.cards[i]:calculate_joker({cs_entering_shop = true})
        end
    end
'''
match_indent = true




# Context for when you play the cards, before it does anything else
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "G.GAME.hands[text].played = G.GAME.hands[text].played + 1"
position = "before"
payload = '''
for i=1, #G.jokers.cards do
    if cs_utils.contains(beforeall_context, G.jokers.cards[i].ability.name) then
        --calculate the joker before hand evaulation
        local effects = eval_card(G.jokers.cards[i], {cardarea = G.jokers, cs_beforeall = true, scoring_hand = scoring_hand})
        if effects.jokers then
            card_eval_status_text(G.jokers.cards[i], 'jokers', nil, 1.1, nil, effects.jokers)
        end
    end
end

text,disp_text,poker_hands,scoring_hand,non_loc_disp_text = G.FUNCS.get_poker_hand_info(G.play.cards)
'''
match_indent = true